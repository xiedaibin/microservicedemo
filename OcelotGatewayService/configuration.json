{
  "ReRoutes": [
    // API01:BasicsService
    // --> swagger part
    {
      "DownstreamPathTemplate": "/doc/BasicsService/swagger.json",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": "6801"
        }
      ],
      "ServiceName": "BasicsService",
      "LoadBalancer": "RoundRobin",
      "UseServiceDiscovery": false,
      "UpstreamPathTemplate": "/doc/BasicsService/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ]
    },
    // --> service part
    {
      "UseServiceDiscovery": false, // use Consul service discovery
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": "6801"
        }
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UpstreamPathTemplate": "/api/basics/{url}",
      "UpstreamHttpMethod": [ "Get", "Post", "Delete", "Put" ],
      "ReRouteIsCaseSensitive": false,
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, // 允许多少个异常请求
        "DurationOfBreak": 10, // 熔断的时间，单位为秒
        "TimeoutValue": 5000 // 如果下游请求的处理时间超过多少则视如该请求超时
      },
      "HttpHandlerOptions": {
        "AllowAutoRedirect": false,
        "UseCookieContainer": false,
        "UseTracing": false
      },
      //认证组件关联配置
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "BasicsServiceKey",
        "AllowedScopes": [ "BasicsServiceApi" ]
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      }
    },
    // API02:InvoicingService
    // --> swagger part
    {
      "DownstreamPathTemplate": "/doc/InvoicingService/swagger.json",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": "8820"
        }
      ],
      "ServiceName": "InvoicingService",
      "LoadBalancer": "RoundRobin",
      "UseServiceDiscovery": false,
      "UpstreamPathTemplate": "/doc/InvoicingService/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ]
    },
    // --> service part
    {
      "UseServiceDiscovery": false, // do not use Consul service discovery
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 6802
        }
      ],
      "UpstreamPathTemplate": "/api/invoicing/{url}",
      "UpstreamHttpMethod": [ "Get", "Post", "Delete", "Put" ],
      "ReRouteIsCaseSensitive": false,
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10,
        "TimeoutValue": 5000
      },
      "HttpHandlerOptions": {
        "AllowAutoRedirect": false,
        "UseCookieContainer": false,
        "UseTracing": false
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "",
        "AllowedScopes": [ "InvoicingServiceApi" ]
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ],
        "EnableRateLimiting": true,
        "Period": "1m",
        "PeriodTimespan": 15,
        "Limit": 100
      }
    },
    // --> Identity Service Part
    {
      "UseServiceDiscovery": false, // do not use Consul service discovery
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": "5000"
        }
      ],
      "ServiceName": "IdentityService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UpstreamPathTemplate": "/api/IdentityService/{url}",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // 允许多少个异常请求
        "DurationOfBreak": 5000, // 熔断的时间，单位为秒
        "TimeoutValue": 3000 // 如果下游请求的处理时间超过多少则视如该请求超时
      },
      "HttpHandlerOptions": {
        "UseTracing": false // use butterfly to tracing request chain
      },
      "ReRoutesCaseSensitive": false // non case sensitive
    }

  ],
  "GlobalConfiguration": {
    //注册发现地址
    //"ServiceDiscoveryProvider": {
    //  "Host": "localhost",
    //  "Port": 8500
    //} //,
    "RateLimitOptions": {
      "DisableRateLimitHeaders": false, // Http头  X-Rate-Limit 和 Retry-After 是否禁用
      "QuotaExceededMessage": "Too many requests, are you OK?", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 999, // 当请求过载被截断时返回的http status
      "ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
    }
  }
}